//$file${.::qm.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: real-time.qm
// File:  ${.::qm.h}
//
// This code has been generated by QM 7.0.1 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// Copyright (c) 2005 Quantum Leaps, LLC. All rights reserved.
//
//                 ____________________________________
//                /                                   /
//               /    GGGGGGG    PPPPPPPP   LL       /
//              /   GG     GG   PP     PP  LL       /
//             /   GG          PP     PP  LL       /
//            /   GG   GGGGG  PPPPPPPP   LL       /
//           /   GG      GG  PP         LL       /
//          /     GGGGGGG   PP         LLLLLLL  /
//         /___________________________________/
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open-source software licensed under the GNU
// General Public License (GPL) as published by the Free Software Foundation
// (see <https://www.gnu.org/licenses>).
//
// NOTE:
// The GPL does NOT permit the incorporation of this code into proprietary
// programs. Please contact Quantum Leaps for commercial licensing options,
// which expressly supersede the GPL and are designed explicitly for
// closed-source distribution.
//
// Quantum Leaps contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::qm.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef QM_H_
#define QM_H_
#include "qpc.h"
#define HIGH_PERIOD  1
#define MID_PERIOD   1
#define LOW_PERIOD   10
//$declare${Shared} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${Shared::AppSignals} ......................................................
enum AppSignals {
    TICK_SIG = Q_USER_SIG,
    RUN_SIG,
    SUPPROT_SIG,
    SWING_SIG,
    // ...
    MAX_SIG  // the last signal
};

//${Shared::PeriodicSpecEvt} .................................................
typedef struct {
// protected:
    QEvt super;

// public:
    uint32_t ticks;
    uint8_t inner_evt;
} PeriodicSpecEvt;

//${Shared::AO_Periodic_High} ................................................
extern QActive * const AO_Periodic_High;

//${Shared::PeriodHigh_ctor} .................................................
void PeriodHigh_ctor(void);

//${Shared::AO_Periodic_Mid} .................................................
extern QActive * const AO_Periodic_Mid;

//${Shared::PeriodMid_ctor} ..................................................
void PeriodMid_ctor(void);

//${Shared::AO_Periodic_Low} .................................................
extern QActive * const AO_Periodic_Low;

//${Shared::PeriodLow_ctor} ..................................................
void PeriodLow_ctor(void);

//${Shared::TTSched_ctor} ....................................................
void TTSched_ctor(void);

//${Shared::TTSched_tick} ....................................................
void TTSched_tick(void);
//$enddecl${Shared} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
void task_mid(void *par, uint8_t *sig);
void task_high(void *par, uint8_t *sig);
void task_low(void *par, uint8_t *sig);
#endif // APP_H_
